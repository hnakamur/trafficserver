# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, dev@trafficserver.apache.org
# This file is distributed under the same license as the Apache Traffic
# Server package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 6.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-02 21:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.1.1\n"

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:24
msgid "TSLifecycleHookAdd"
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:27
msgid "Synopsis"
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:28
msgid "`#include <ts/ts.h>`"
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:33
msgid "Description"
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:35
msgid ""
":func:`TSLifecycleHookAdd` adds :arg:`contp` to the list of lifecycle "
"hooks specified by :arg:`id`. Lifecycle hooks are based on the Traffic "
"Server process, not on any specific transaction or session. These will "
"typically be called only once during the execution of the Traffic Server "
"process and therefore should be added in :func:`TSPluginInit` (which "
"could itself be considered a lifecyle hook). Unlike other hooks, "
"lifecycle hooks may not have a well defined ordering and use of them "
"should not assume that one of the hooks is always called before another "
"unless specifically mentioned."
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:41
msgid ""
"Called after the :ts:cv:`proxy server port "
"<proxy.config.http.server_ports>` data structures have been initialized "
"but before connections are accepted on those ports. The sockets "
"corresponding to the ports may or may not be open depending on how the "
":program:`traffic_server` process was invoked. Other API functions that "
"depend on server ports should be called from this hook and not "
":func:`TSPluginInit`."
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:46
msgid ""
"Invoked with the event :c:data:`TS_EVENT_LIFECYCLE_PORTS_INITIALIZED` and"
" :c:data:`NULL` data."
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:50
msgid ""
"Called after enabling connections on the proxy server ports. Because "
"Traffic Server is threaded this may or may not be called before any "
"connections are accepted. The hook code may assume that any connection to"
" Traffic Server started after this hook is called will be accepted by "
"Traffic Server, making this a convenient place to signal external "
"processes of that."
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:55
msgid ""
"Invoked with the event :c:data:`TS_EVENT_LIFECYCLE_PORTS_READY` and "
":c:data:`NULL` data."
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:59
msgid "Called after Traffic Server cache initialization has finished."
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:61
msgid ""
"Invoked with the event :c:data:`TS_EVENT_LIFECYCLE_CACHE_READY` and "
":c:data:`NULL` data."
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:64
msgid "Ordering"
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:66
msgid ""
":c:data:`TS_LIFECYCLE_PORTS_INITIALIZED_HOOK` will always be called "
"before :c:data:`TS_LIFECYCLE_PORTS_READY_HOOK`."
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:69
msgid "Examples"
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:71
msgid ""
"The following example demonstrates how to correctly use "
":func:`TSNetAcceptNamedProtocol`, which requires the proxy ports to be "
"initialized and therefore does not work if called from "
":func:`TSPluginInit` directly. ::"
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:103
msgid "History"
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:105
msgid ""
"Lifecycle hooks were introduced to solve process initialization ordering "
"issues (TS-1487). Different API calls required different modules of "
"Traffic Server to be initialized for the call to work, but others did not"
" work that late in initialization, which was problematic because all of "
"them could effectively only be called from :func:`TSPluginInit` . The "
"solution was to move :func:`TSPluginInit` as early as possible in the "
"process initialization and provide hooks for API calls that needed to be "
"invoked later which served essentially as additional pluging "
"initialization points."
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:111
msgid "See also"
msgstr ""

#: ../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:112
msgid ":manpage:`TSAPI(3ts)`, :manpage:`TSContCreate(3ts)`"
msgstr ""

